openapi: 3.0.0
info:
  title: Speed CV api
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: https://speedilypay.com/api/public
    description: Base url for production
paths:
   /login:
    post:
      tags:
        - User 
      summary: Enable a registered user to login.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: email
          required: true
          description: email of user.
          schema:
            type: string 
        - name: password
          required: true
          description: password of user.
          schema:
            type: string          
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      fullname: john doe
                      email: test@gmail.com
                      datemade: 2020-12-05 13:50:3
                         
        '400':
          description: errors
   /register:
    post:
      tags:
        - User 
      summary: register a user.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: fullname
          required: true
          description: fullname of user.
          schema:
            type: string 
        - name: phone
          description: phone number of user.
          schema:
            type: integer
        - name: email
          required: true
          description: email of user
          schema:
            type: string              
        - name: password
          required: true
          description: password of user
          schema:
           type: string
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      fullname: john doe
                      email: test@gmail.com
                      datemade: 2020-12-05 13:50:3
                         
        '400':
          description: errors        
   /user/personal-details:
    post:
      tags:
        - Template Details 
      summary: user personal information.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: name
          required: true
          description: name of user.
          schema:
            type: string 
        - name: phone
          
          description: phone number of user.
          schema:
            type: integer
        - name: email
          required: true
          description: email of user
          schema:
            type: string
        - name: userId
          required: true
          description: user id from login or register response
          schema:
            type: integer    
        - name: address
          
          description: address of user
          schema:
            type: string
        - name: website
          
          description: website of user
        - name: dateOfBirth
          description: date of birth
          schema:
            type: string
        - name: profilePicture
          description: profile image of user, note, must be in base64 string
          schema:
             type: binary                             
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      email: test@gmail.com
                      trackcv: 13478972521607713241
                         
        '400':
          description: errors
   /user/personal-details/education:
    post:
      tags:
        - Template Details 
      summary: user education details
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: course
          description: course of study.
          schema:
            type: string
        - name: school
          description: school attended
          schema:
            type: string
        - name: grade
          description: school grade
          schema:
            type: string
        - name: year
          description: graduation date
          schema:
            type: string                   
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      course: biochem
                      school: uniben
                      grade: 3.5
                      year: 2010 - 2015
   /user/personal-details/experience:
    post:
      tags:
        - Template Details 
      summary: user work experience details
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: companyName
          description: company name.
          schema:
            type: string
        - name: jobTitle
          description: title of job
          schema:
            type: string
        - name: startDate
          description: employment date
          schema:
            type: string
        - name: endDate
          description: termination date
          schema:
            type: string
        - name: details
          description: details of work
          schema:
            type: string                       
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      companyName: twitter
                      jobTitle: senior backend dev
                      startDate: 2006-5-20
                      endDate: 2014-7-12
                      details: testing
                      datemade: 2020-12-11 14:41:2                   
   /user/personal-details/skills:
    post:
      tags:
        - Template Details 
      summary: user skills
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: skills
          required: true
          description: skills of users.
          schema:
            type: string
        - name: level
          required: true
          description: level of expertise
          schema:
            type: integer                       
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      skills: javascript
                      level: 5
                      datemade: 2020-12-11 14:41:2  
   /user/personal-details/objective:
    post:
      tags:
        - Template Details 
      summary: objectives
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: objective
          required: true
          description: objectives.
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      obj: solving problem with code
                      datemade: 2020-12-11 14:41:2                                       

   /user/personal-details/reference:
    post:
      tags:
        - Template Details 
      summary: user referees
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: refereeName
          required: true
          description: name of referee.
          schema:
            type: string
        - name: jobTitle
          required: true
          description: title of job
          schema:
            type: string
        - name: companyName
          required: true
          description: name of the company
          schema:
            type: string
        - name: email
          required: true
          description: email of referee
          schema:
            type: string
        - name: phone
          required: true
          description: telephone number of referee
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      refereeName: tommy j
                      jobTitle: devops
                      companyName: twitter
                      email: devops@gmail.com
                      phone: 09067453343
                      datemade: 2020-12-11 14:41:2                     
        '400':
          description: errors                          
   /user/personal-details/projects:
    post:
      tags:
        - Template Details 
      summary: projects done by user
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          required: true
          description: id from personal details.
          schema:
            type: integer 
        - name: title
          required: true
          description: title of project.
          schema:
            type: string
        - name: description
          
          required: true
          description: description of the project
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example : OK  
                  data:
                     type: array
                     example:
                      id: 10
                      pid: 4
                      title: work on elearning platform
                      description: develop a video based e-learning platform
                      datemade: 2020-12-11 14:41:2                     
        '400':
          description: errors               
   /sections/{apiKey}/{secretKey}:
    get:
      tags:
        - Cv Sections 
      summary: get section lists.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1 
                  title:
                    type: string
                    example: Personal Details                    
        '400':
          description: errors
   /sections/create:
    post:
      tags:
        - Cv Sections 
      summary: create section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: title
          
          required: true
          description: title of section
          schema:
             type: string    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200 
                  response:
                    type: string
                    example: success                    
        '400':
          description: errors       
   /sections/edit/{id}:
    put:
      tags:
        - Cv Sections 
      summary: edit section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: id
          
          required: true
          description: id of section
          schema:
            type: integer    
        - name: title
          
          required: true
          description: title of section
          schema:
             type: string    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200 
                  response:
                    type: string
                    example: success                    
        '400':
          description: errors              
   /sections/delete/{id}:
    delete:
      tags:
        - Cv Sections 
      summary: delete section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: id
          
          required: true
          description: id of section
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200 
                  response:
                    type: string
                    example: success                    
        '400':
          description: errors                     
   /user/personal-details/miscellaneous:
    post:
      tags:
        - Template Details 
      summary: This takes the value of the extra section created by users.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: headerId
          
          required: true
          description: id of section
          schema:
            type: integer    
        - name: personalDetailsId
          
          required: true
          description: id of personal details
          schema:
            type: integer      
        - name: value
          
          required: true
          description: value of created section
          schema:
            type: string    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200 
                  response:
                    type: string
                    example: success                    
        '400':
          description: errors 
   /user/template-lists/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch all the templates.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1 
                  path:
                    type: string
                    example: https://speedilypay.com/api/public/template-lists/tmp1.png                    
        '400':
          description: errors  
   /user/personal-details/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch the personal details content.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  data:
                     type: array
                     example:
                      id: 10
                      user_id: 4
                      trackcv: 7336462021607463066
                      name: john doe
                      address: lugbe,abuja
                      email: devops@gmail.com
                      profile: default.jpg
                      website: test.com
                      dob: 1995 - 03 - 20
                      phone: 09067453343
                      datemade: 2020-12-11 14:41:2                    
        '400':
          description: errors                                                                                                                                
   /user/personal-details/edit/{personalDetailsId}:
    put:
      tags:
        - Template Details 
      summary: edit the personal details content.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: name
          
          description: name of user
          schema:
            type: string
        - name: email
          
          description: email of user
          schema: 
            type: string
        - name: phone
          
          description: phone number of user
          schema:
            type: integer
        - name: address
          
          description: address of user
          schema:
            type: string
        - name: dateOfBirth
          
          description: date of birth
          schema: 
            type: string
        - name: profilePicture
          
          description: profile image in base64 encode string
          schema:
            type: blob
        - name: website
          
          description: website link of user
          schema:
            type: string                            
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: OK                  
        '400':
          description: errors
   /user/education/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: get the all the contents from education section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string                            
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 4
                  course: 
                    type: string
                    example: biochem
                  school: 
                    type: string
                    example: uniben
                  grade: 
                    type: float
                    example: 3.5
                  year:
                    type: string
                    example: 2010 - 2015                          
        '400':
          description: errors
   /user/education/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: Edit the contents from education section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The education content id
          schema:
            type: integer
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success                          
        '400':
          description: errors
   /user/education/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from education section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: education id  
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors        
   /user/experience/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: get the contents from experience section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  companyName: 
                    type: string
                    example: twitter inc.
                  jobTitle: 
                    type: string
                    example: devops
                  startDate:
                    type: string
                    example: 2020 - 01 - 19
                  endDate: 
                    type: string
                    example: 2020 - 09 - 20
                  details:
                    type: string
                    example: fullstack developer with knack for solving problems with code  

        '400':
          description: errors  
   /user/experience/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: edit the contents of experience section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: experience section id
          schema:
            type: integer
        - name: companyName
          required: true
          description: name of the company
          schema:
            type: string
        - name: jobTitle
          required: true
          description: job title
          schema:
            type: string
        - name: startDate
          required: true
          description: employment start date
          schema:
            type: string            
        - name: endDate
          required: true
          description: employment end date
          schema:
            type: string     
        - name: details
          required: true
          description: employment details
          schema:
            type: string
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 2
                  response:
                    type: integer
                    example: success
        '400':
          description: errors
   /user/experience/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from experience section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: experience id  
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors                 
   /user/skills/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch the content from skills section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  skills: 
                    type: string
                    example: aws
                  level:
                    type: integer
                    example: 4    
        '400':
          description: errors  
   /user/skills/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: edit content from skills section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: skills id
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: OK
        '400':
          description: errors
   /user/skills/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from skills section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: skills id  
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors          
   /user/objective/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch content from objective section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  obj:
                    type: string
                    example: testing the lifecycle of softwares and developing world class application  
        '400':
          description: errors  
   /user/objective/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: edit content from objective section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: objective id
          schema:
            type: integer
        - name: objective
          required: true
          description: objective content
          schema:
            type: string        
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: OK
        '400':
          description: errors       
   /user/objective/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from objective section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: objective id  
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors               
   /user/reference/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch content from reference section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  refereeName:
                    type: string
                    example: john doe
                  jobTitle:
                    type: string
                    example: senior devops
                  companyName:
                    type: string
                    example: twitter inc
                  email:
                    type: string
                    example: test@gmail.com
                  phone:
                    type: integer
                    example: 07040302352          
        '400':
          description: errors          
   /user/reference/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: edit content from reference section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: reference id
          schema:
            type: integer
        - name: refereeName
          required: true
          description: referee name
          schema:
            type: string        
        - name: jobTitle
          required: true
          description: title of job
          schema:
            type: string        
        - name: companyName
          required: true
          description: company name
          schema:
            type: string 
        - name: email
          required: true
          description: email of user
          schema:
            type: string     
        - name: phone 
          required: true
          description: phone of user
          schema:
            type: string                     
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors
   /user/reference/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from reference section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: reference id
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors                      
   /user/projects/fetch/{personalDetailsId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch content from projects section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey
          in: path          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: e-learning management
                  description:
                    type: string
                    example: management of online learning materials
        '400':
          description: errors
   /user/projects/edit/{personalDetailsId}/{id}:
    put:
      tags:
        - Template Details 
      summary: edit content from projects section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: reference id
          schema:
            type: integer
        - name: title
          required: true
          description: projects title
          schema:
            type: string        
        - name: description
          required: true
          description: description of projects
          schema:
            type: string        
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors
   /user/projects/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from project section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: reference id
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors
   /user/miscellaneous/fetch/{personalDetailsId}/{sectionId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Template Details 
      summary: fetch content from user created sections.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey  
          in: path        
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: sectionId  
          in: path
          required: true
          description: section id 
          schema:
            type: integer  
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  pid:
                    type: integer
                    example: 1
                  headingId:
                    type: integer
                    example: 4
                  value:
                    type: string
                    example: management of online learning materials
        '400':
          description: errors
   /user/miscellaneous/edit/{personalDetailsId}/{sectionId}:
    put:
      tags:
        - Template Details 
      summary: edit content from user created section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: id of user created section
          schema:
            type: integer
        - name: value
          required: true
          description: contents 
          schema:
            type: string        
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors
   /user/miscellaneous/delete/{personalDetailsId}/{id}:
    delete:
      tags:
        - Template Details 
      summary: delete contents from user created section.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: id
          required: true
          description: miscellaneous id returned from get 
          schema:
            type: integer         
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors   
   /user/cv/fetch/{userId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Cv 
      summary: get all user cvs.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: id of logged-in user
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  email:
                    type: string
                    example: test@gmail.com
                  name:
                    type: string
                    example: tomsy jack  
        '400':
          description: errors 
   /user/cv/delete/{userId}:
    delete:
      tags:
        - Cv
      summary: delete cv.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: id of logged-in user
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors 
   /user/generatepdf:
    post:
      tags:
        - Cv
      summary: generate the cv in pdf format.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: personalDetailsId
          in: path
          required: true
          description: personal details id
          schema:
            type: integer
        - name: templateId
          in: path
          required: true
          description: id of template selected
          schema:
            type: integer    
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  path:
                    type: string
                    example: https://test.com/speedapi/public/genpdf/278001870.pdf
        '400':
          description: errors   
   /user/cv/fetchpdf/{userId}/{apiKey}/{secretKey}:
    get:
      tags:
        - Cv
      summary: fetch all generated pdf for user.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          in: path
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          in: path
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: userId
          in: path
          required: true
          description: id of user
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example : 2
                  path:
                    type: string
                    example: https://test.com/speedapi/public/genpdf/278001870.pdf
                  user_id:
                    type: integer
                    example : 2  

        '400':
          description: errors
   /user/cv/pdf/delete/{id}:
    delete:
      tags:
        - Cv
      summary: delete pdf.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: apiKey          
          required: true
          description: The api key of the application.
          schema:
            type: string
        - name: secretKey
          required: true
          description: The secret key of the application.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: pdf id
          schema:
            type: integer
      responses:
        '200':
          description: data object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example : 200
                  response:
                    type: string
                    example: success
        '400':
          description: errors